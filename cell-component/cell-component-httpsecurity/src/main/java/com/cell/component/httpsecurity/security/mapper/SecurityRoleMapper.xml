<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cell.component.httpsecurity.security.mapper.SecurityRoleMapper">

    <resultMap type="com.cell.component.httpsecurity.security.entity.SecurityRole" id="SecurityRoleResultMap">
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="parentRoleId" column="parent_role_id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleDesc" column="role_desc" jdbcType="VARCHAR"/>
        <result property="careteDate" column="carete_date" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="update_date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="table_field">
        role_id
        , parent_role_id, role_name, role_desc, carete_date, update_date
    </sql>

    <!--通过Id查询单个-->
    <select id="getById" resultMap="SecurityRoleResultMap" parameterType="java.lang.Integer">
        select
        <include refid="table_field"/>
        from security_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>


    <!--通过实体不为空的属性作为筛选条件查询列表-->
    <select id="listByEntity" resultMap="SecurityRoleResultMap"
            parameterType="com.cell.component.httpsecurity.security.entity.SecurityRole">
        select
        <include refid="table_field"/>
        from security_role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId,jdbcType=INTEGER}
            </if>
            <if test="parentRoleId != null">
                and parent_role_id = #{parentRoleId,jdbcType=INTEGER}
            </if>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
            <if test="roleDesc != null">
                and role_desc = #{roleDesc,jdbcType=VARCHAR}
            </if>
            <if test="careteDate != null">
                and carete_date = #{careteDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updateDate != null">
                and update_date = #{updateDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>

    <!--通过实体不为空的属性作为筛选条件查询单个-->
    <select id="getByEntity" resultMap="SecurityRoleResultMap"
            parameterType="com.cell.component.httpsecurity.security.entity.SecurityRole">
        select
        <include refid="table_field"/>
        from security_role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId,jdbcType=INTEGER}
            </if>
            <if test="parentRoleId != null">
                and parent_role_id = #{parentRoleId,jdbcType=INTEGER}
            </if>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
            <if test="roleDesc != null">
                and role_desc = #{roleDesc,jdbcType=VARCHAR}
            </if>
            <if test="careteDate != null">
                and carete_date = #{careteDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updateDate != null">
                and update_date = #{updateDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>

    <!--通过Id列表作为筛选条件查询列表，列表长度不为0-->
    <select id="listByIds" resultMap="SecurityRoleResultMap" parameterType="list">
        select
        <include refid="table_field"/>
        from security_role
        where role_id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item}
        </foreach>
    </select>

    <!--新增实体属性不为null的列-->
    <insert id="insert" keyProperty="roleId" useGeneratedKeys="true"
            parameterType="com.cell.component.httpsecurity.security.entity.SecurityRole">
        insert into security_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="parentRoleId != null">
                parent_role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDesc != null">
                role_desc,
            </if>
            <if test="careteDate != null">
                carete_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="parentRoleId != null">
                #{parentRoleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="careteDate != null">
                #{careteDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <!--批量新增所有列，列表长度不能为0，且列表id统一为null或者统一不为null-->
    <insert id="insertBatch" keyProperty="roleId" useGeneratedKeys="true" parameterType="list">
        insert into security_role
        (role_id, parent_role_id, role_name, role_desc, carete_date, update_date)
        values
        <foreach item="item" collection="list" separator="," open="" close="" index="index">
            (#{item.roleId}, #{item.parentRoleId}, #{item.roleName}, #{item.roleDesc}, #{item.careteDate},
            #{item.updateDate})
        </foreach>
    </insert>

    <!--通过主键修改实体属性不为null的列-->
    <update id="update" parameterType="com.cell.component.httpsecurity.security.entity.SecurityRole">
        update security_role
        <set>
            <if test="parentRoleId != null">
                parent_role_id = #{parentRoleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null and roleDesc != ''">
                role_desc = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="careteDate != null">
                carete_date = #{careteDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>

    <!--通过表字段修改实体属性不为null的列-->
    <update id="updateByField">
        update security_role
        <set>
            <if test="where.parentRoleId == null and set.parentRoleId != null">
                parent_role_id = #{set.parentRoleId,jdbcType=INTEGER},
            </if>
            <if test="where.roleName == null and set.roleName != null and set.roleName != ''">
                role_name = #{set.roleName,jdbcType=VARCHAR},
            </if>
            <if test="where.roleDesc == null and set.roleDesc != null and set.roleDesc != ''">
                role_desc = #{set.roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="where.careteDate == null and set.careteDate != null">
                carete_date = #{set.careteDate,jdbcType=TIMESTAMP},
            </if>
            <if test="where.updateDate == null and set.updateDate != null">
                update_date = #{set.updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <where>
            <if test="where.roleId != null">
                and role_id = #{where.roleId,jdbcType=INTEGER}
            </if>
            <if test="where.parentRoleId != null">
                and parent_role_id = #{where.parentRoleId,jdbcType=INTEGER}
            </if>
            <if test="where.roleName != null">
                and role_name = #{where.roleName,jdbcType=VARCHAR}
            </if>
            <if test="where.roleDesc != null">
                and role_desc = #{where.roleDesc,jdbcType=VARCHAR}
            </if>
            <if test="where.careteDate != null">
                and carete_date = #{where.careteDate,jdbcType=TIMESTAMP}
            </if>
            <if test="where.updateDate != null">
                and update_date = #{where.updateDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </update>

    <!--通过主键修改实体列表，列表长度不能为0，注意：当实体属性为null时，对应的列也会别更新为null-->
    <update id="updateBatch" parameterType="list">
        update security_role
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="parent_role_id = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when role_id = #{item.roleId} then #{item.parentRoleId}
                </foreach>
            </trim>
            <trim prefix="role_name = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when role_id = #{item.roleId} then #{item.roleName}
                </foreach>
            </trim>
            <trim prefix="role_desc = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when role_id = #{item.roleId} then #{item.roleDesc}
                </foreach>
            </trim>
            <trim prefix="carete_date = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when role_id = #{item.roleId} then #{item.careteDate}
                </foreach>
            </trim>
            <trim prefix="update_date = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    when role_id = #{item.roleId} then #{item.updateDate}
                </foreach>
            </trim>
        </trim>
        where role_id in
        <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
            #{item.roleId,jdbcType=INTEGER}
        </foreach>
    </update>

    <!--通过主键删除-->
    <delete id="deleteById" parameterType="java.lang.Integer">
        delete
        from security_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>

    <!--通过实体非空属性删除-->
    <delete id="deleteByEntity" parameterType="com.cell.component.httpsecurity.security.entity.SecurityRole">
        delete from security_role
        <where>
            <if test="parentRoleId != null">
                and parent_role_id = #{parentRoleId,jdbcType=INTEGER}
            </if>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
            <if test="roleDesc != null">
                and role_desc = #{roleDesc,jdbcType=VARCHAR}
            </if>
            <if test="careteDate != null">
                and carete_date = #{careteDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updateDate != null">
                and update_date = #{updateDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </delete>

    <!--通过主键列表删除，列表长度不能为0-->
    <delete id="deleteByIds" parameterType="list">
        delete from security_role where role_id in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item}
        </foreach>
    </delete>

    <select id="countAll" resultType="int">
        select count(*)
        from security_role
    </select>

    <select id="countByEntity" parameterType="com.cell.component.httpsecurity.security.entity.SecurityRole"
            resultType="int">
        select count(*) from security_role
        <where>
            <if test="roleId != null">
                and role_id = #{roleId,jdbcType=INTEGER}
            </if>
            <if test="parentRoleId != null">
                and parent_role_id = #{parentRoleId,jdbcType=INTEGER}
            </if>
            <if test="roleName != null">
                and role_name = #{roleName,jdbcType=VARCHAR}
            </if>
            <if test="roleDesc != null">
                and role_desc = #{roleDesc,jdbcType=VARCHAR}
            </if>
            <if test="careteDate != null">
                and carete_date = #{careteDate,jdbcType=TIMESTAMP}
            </if>
            <if test="updateDate != null">
                and update_date = #{updateDate,jdbcType=TIMESTAMP}
            </if>
        </where>
    </select>
</mapper>
